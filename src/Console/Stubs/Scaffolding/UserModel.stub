<?php
namespace DummyNamespace\Models\Users;

use Illuminate\Support\Facades\Hash;
use Nodes\Database\Eloquent\Model as NodesModel;

/**
 * Class User
 *
 * @package DummyNamespace\Models\Users
 */
class User extends NodesModel
{
    /**
     * The table associated with the model
     *
     * @var string
     */
    protected $table = 'users';

    /**
     * The attributes that aren't mass assignable
     *
     * @var array
     */
    protected $fillable = [
        'name',
        'email',
        'password',
        'verified_at',
    ];

    /**
     * The attributes that should be hidden for arrays
     *
     * @var array
     */
    protected $hidden = ['password'];

    /**
     * The attributes that should be mutated to dates.
     *
     * @var array
     */
    protected $dates = ['verified_at'];

    /**
     * The "booting" method of the model.
     *
     * @static
     * @access public
     * @return void
     */
    public static function boot()
    {
        parent::boot();

        self::updated(function($user) {
            cache_forget('api.userToken', ['accessToken' => $user->getToken()]);
        });
    }

    /*
    |-----------------------------------------------------------
    | Relations
    |-----------------------------------------------------------
    */

    /**
     * User has one access token
     *
     * @access public
     * @return \Illuminate\Database\Eloquent\Relations\HasOne
     */
    public function token()
    {
        return $this->hasOne(\DummyNamespace\Models\Users\Tokens\Token::class, 'user_id', 'id');
    }

    /*
    |-----------------------------------------------------------
    | Helpers
    |-----------------------------------------------------------
    */
    
    /**
     * getToken
     *
     * @author Casper Rasmussen <cr@nodes.dk>
     * @return string
     */
    public function getToken()
    {
        return $this->token->token;
    }

    /*
    |-----------------------------------------------------------
    | Mutators
    |-----------------------------------------------------------
    */

    /**
     * Automatically hash password attribute
     *
     * @access public
     * @param  string $value
     * @return $this
     */
    public function setPasswordAttribute($value)
    {
        $this->attributes['password'] = Hash::make($value);
        return $this;
    }
}